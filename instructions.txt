********************************************************
Straightforward Training™
How to Publish in Github (noob edition)
Author: Saulo S. Ortiz
Date: 20180604
********************************************************

DISCLAIMER:
1. These steps will only work if you have your ACL set. If you have a router that is fully open—as in bought it, connected it—then
these steps will not fully work. These steps are for a more secure router that has a limited IP pool range and also uses an ACL.

2. If you don't have a separate router to play with and you use your own main one, then be aware that connectivity will be
intermittent after performing these steps. You may even have to reboot your router or any other devices to get them to work
as before. Worst case scenario would be that you may have to reset your router, so do these steps at your own risk. I am not
responsible for any issues/damages these steps may cause. I have tested these steps multiple times for accuracy, but every
hardware is different and therefore may react differently.
Create gits in github (no branches/single user)
1. Download the GitBash program
•	www.git-scm.com

2. Download the ATOM editor
•	https://atom.io/

3. Install both programs

4. Create a github account

5. In your computer create a Github folder to work from
•	create a subfolder for each subject you want

6. login to github and create a new repository for the subject you want to push (upload)
•	an initial instructions page will show up

7. Go to the github folder in your computer and right click on it...select GitBash from the list and a terminal screen will show...wait a few seconds for it to load

8. Run ATOM and from the menu select the github folder...the folder and subfolders will show up
close all the initial tabs in ATOM

9. go to GitBash and use it with Linux commands
cd, ls, rm mkdir, etc

10. cd to the first subject you want to work with

11. type git init to create a hidden folder that github needs

12. type touch .gitignore to create the hidden .gitignore file

13. in ATOM double click the .gitignore file and in it type log.txt
this will tell gitgub NOT to push any log files to it...you can add different file names here for github NOT to receive when you do pushes

14. type touch <your_file_name> which creates an empty file you are going to work from and push...in my case mine reads instructions.txt

15. using ATOM edit your file with the data you want in it...instructions, commands, etc

16. When you’re ready to push (upload) type git add .
This adds all the files in that subfolder to the queue
you can also add single files using their format like .html or .txt, etc

17. this next step is done one time as a pre-logon step but when you log out of gitbash and log back in you will have to do it again
git --config user.name ‘your_name’
git --config user.email ‘your_email’

18. looking at the initial page in your github account copy and paste into gitbash the command:
git commit -m ‘first commit’
this commits your queue to upload and adds the comment ‘first commit’ for reference purposes

19. now copy and paste into gitbash the long command in the repository page which links gitbash to the repository you’re going to push to...a login screen pops up...log in.

20. now you can use the last command git push -u origin master to upload your content
this command is used this one time as its a new repository after that you will use the following commands do all your work:
git add .
git commit -m ‘your_comment’
git push

Additional Notes:
1. Refresh your repository and do any changes if the format looks off. Also, if you want to add a README file with some comments or instructions you need to type touch README.md then use ATOM to add what you want to say.

2. Any errors shut everything off then redo.

3. You need to do these steps for each new repository...updating only uses the last commands above.
